<link rel="stylesheet" href="/css/user_info_style.css">
<body>
    {{> header}}
    <nav class="breadcrumbs">
        <ul>
            <li><a href="/home_page"><img src="/images/home.png"></a></li>
            <li><a href="/certificates" class="active">Αίτηση Πιστοποιητικών</a></li>
        </ul>
    </nav>
    {{> menu}}

    <div class="flex-container">
        <div class="content-wrapper">
            <div class="table-container">
                <div class="title-container">
                    <h2>Αίτηση Πιστοποιητικών</h2>
                </div>

                <hr>

                <table class="certificates">
                    <thead>
                        <th>Ιστορικό Αιτήσεων:</th>
                        <th></th>
                        <th></th>
                    </thead>
                    <tbody>
                        {{#each studentsCertificates}}
                        <tr>
                            <td class="certificate"><a href="/generate-pdf/{{translateCertificate this.name}}" download>{{ this.name }}</a></td>
                            <td class="date">{{this.date}}</td>
                            <td class="state">{{this.state}}</td>
                        </tr>
                        {{/each}}

                    </tbody>
                </table>
                {{#unless hasCertificates}}
                    <img src="/images/exclamation.png" alt="Exclamation">
                    <p class="exclamation">Δεν υπάρχει ιστορικό αιτήσεων</p>
                {{/unless}}
                <hr>
                
                <form id="certificate-form" method="post" action="/submit-certificate" style="display: none;">
                    <fieldset>
                        <h2>Νέα αίτηση:</h2>
                        <br>
                        <label for="certificate-type">Τύπος Πιστοποιητικού:</label>
                        <select id="certificate-type" name="certificate-type">
                            <option value="" disabled selected>--Επιλέξτε πιστοποιητικό--</option>
                            {{#each certificates}}
                                <option value="{{this.id}}"> {{this.name}} </option>
                            {{/each}}
                        </select><br><br>

                        <input type="checkbox" id="detailed" name="detailed" disabled>
                        <label for="detailed">Με Αναλυτική:</label><br><br>

                        <div id="detailed-options">
                            <label for="attempt">Προσπάθειες:</label>
                            <select id="attempt" name="attempt" disabled>
                                <option value="5">Όλες οι προσπάθειες</option>
                                <option value="6">Επιτυχημένες προσπάθειες</option>
                                <option value="7">Τελευταία προσπάθεια</option>
                            </select><br><br>
                        </div>

                    </fieldset>
                    <button class="edit-button" type="submit" id="submit_button" style="display: none;">Υποβολή</button> 
                </form>
                <button class="edit-button" id="new_declaration" onclick="toggleForm()" >Νέα αίτηση</button>        
            </div>
        </div>
    </div>
       
    <div class="popup" id="popup">
        <img src="/images/file.png">
        <p>Επιτυχής υποβολή αίτησης!</p>
        <br>
        <p class="comment">Αναμονή για επιβεβαίωση από τη γραμματεία.</p>
    </div>

    <script>
        function toggleForm() {
            const form = document.getElementById('certificate-form');
            const newDeclarationButton = document.getElementById('new_declaration');
            const submitButton = document.getElementById('submit_button');

            if (form.style.display === 'none') {
                form.style.display = 'block';
                newDeclarationButton.style.display = 'none';
            } else {
                form.style.display = 'none';
                newDeclarationButton.style.display = 'block';
                submitButton.style.display = 'none';
                newDeclarationButton.textContent = 'Νέα αίτηση';
                newDeclarationButton.type = 'button';
            }
        }

        document.addEventListener("DOMContentLoaded", function() {
            const certificateTypeSelect = document.getElementById('certificate-type');
            const submitButton = document.getElementById('submit_button');
            const detailedCheckbox = document.getElementById('detailed');
            const detailedOptions = document.getElementById('detailed-options');
            const attemptSelect = document.getElementById('attempt');

            certificateTypeSelect.addEventListener('change', function() {
                if (certificateTypeSelect.value !== '') {
                    submitButton.style.display = 'block';
                    if (certificateTypeSelect.options[certificateTypeSelect.selectedIndex].value === '2') {
                        detailedCheckbox.disabled = false;
                    } else {
                        detailedCheckbox.disabled = true;
                        attemptSelect.disabled = true;
                    }
                } else {
                    submitButton.style.display = 'none';
                }
            });

            detailedCheckbox.addEventListener('change', function() {
                if (detailedCheckbox.checked) {
                    attemptSelect.disabled = false;
                } else {
                    attemptSelect.disabled = true;
                }
            });

            const form = document.getElementById('certificate-form');
            form.addEventListener('submit', function(event) {
                event.preventDefault();

                const certificateType = certificateTypeSelect.value;
                let finalCertificateType = certificateType;

                if (certificateTypeSelect.options[certificateTypeSelect.selectedIndex].value === '2' && detailedCheckbox.checked) {
                    finalCertificateType = attemptSelect.value;
                }

                const xhr = new XMLHttpRequest();
                xhr.open('POST', '/submit-certificate', true);
                xhr.setRequestHeader('Content-Type', 'application/json');
                xhr.onload = function() {
                    if (xhr.status === 200) {
                        console.log('Certificate submitted successfully');
                        openPopup();
                        setTimeout(function() {
                            window.location.reload();
                        }, 3000);
                    } else {
                        console.error('Failed to submit certificate');
                    }
                };
                xhr.onerror = function() {
                    console.error('Failed to submit certificate');
                };
                xhr.send(JSON.stringify({ certificateType: finalCertificateType }));

                return false; 
            });
        });
        
        const certificateTranslations = {
            "1": "Active Student Certificate",
            "2": "Student Status Certificate",
            "3": "Qualification-Field Certificate",
            "4": "Thesis Certificate",
            "5": "Student Status Certificate - All tries",
            "6": "Student Status Certificate - Successful tries",
            "7": "Student Status Certificate - Last try"
        };

        function saveCertificate() {
            const certificateType = document.getElementById('certificate-type').value;
            const translatedType = certificateTranslations[certificateType];
            const today = new Date().toLocaleDateString('el-GR');
            const status = 'Σε αναμονή';

            const table = document.querySelector('.certificates tbody');
            const newRow = table.insertRow(-1);
            const typeCell = newRow.insertCell(0);
            const dateCell = newRow.insertCell(1);
            const statusCell = newRow.insertCell(2);

            const anchor = document.createElement('a');
            anchor.href = `/generate-pdf/${translatedType}`;
            anchor.textContent = certificateType; 
            anchor.title = translatedType; 
            anchor.setAttribute('download', `${translatedType}.pdf`);

            typeCell.appendChild(anchor);

            dateCell.textContent = today;
            statusCell.textContent = status;

            const xhr = new XMLHttpRequest();
            xhr.open('POST', '/update-status', true);
            xhr.setRequestHeader('Content-Type', 'application/json');
            xhr.onload = function() {
                if (xhr.status === 200) {
                    console.log('Status updated successfully');
                    statusCell.textContent = 'Ολοκληρωμένο'; 
                } else {
                    console.error('Failed to update status');
                }
            };
            xhr.onerror = function() {
                console.error('Failed to update status');
            };
            xhr.send(JSON.stringify({ certificateType: translatedType, status: 'Ολοκληρωμένο' }));
        }

        function openPopup(){
            const popup = document.getElementById("popup");
            popup.classList.add("open-popup");
            setTimeout(function(){
                popup.classList.remove("open-popup");
            }, 3000);
        }
    </script>

</body>
